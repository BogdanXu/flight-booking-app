name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  VERSION: latest

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
      
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17
        cache: maven

    - name: Code vulnerability scanning
      uses: anchore/scan-action@v3
      id: scan
      with:
        path: "${{ github.workspace }}"
        fail-build: false
        severity-cutoff: high
        acs-report-enable: true

    - name: Upload vulnerability report
      uses: github/codeql-action/upload-sarif@v2
      if: success() || failure()
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}

    - name: Build, unit tests and integration tests - Admin
      working-directory: ./admin
      run: |
        chmod +x mvnw                                 
        ./mvnw clean install

    - name: Build, unit tests and integration tests - Booking
      working-directory: ./booking
      run: |
        chmod +x mvnw                                 
        ./mvnw clean install

    - name: Build, unit tests and integration tests - Flight-search
      working-directory: ./flight-search
      run: |
        chmod +x mvnw                                 
        ./mvnw clean install

    - name: Build, unit tests and integration tests - Notification
      working-directory: ./notification
      run: |
        chmod +x mvnw                                 
        ./mvnw clean install

    - name: Build, unit tests and integration tests - Operator
      working-directory: ./operator 
      run: |
        chmod +x mvnw                                 
        ./mvnw clean install -DskipTests

    - name: Build, unit tests and integration tests - Payments
      working-directory: ./payments
      run: |
        chmod +x mvnw                                 
        ./mvnw clean install -DskipTests

  package:
    name: Package and Publish 
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build_and_test ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Build container image - Booking
        working-directory: ./booking
        run: |
          chmod +x mvnw 
          ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=ghcr.io/bogdanxu/booking:latest
      
      - name: Build container image - Admin
        working-directory: ./admin
        run: |
          chmod +x mvnw 
          ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=ghcr.io/bogdanxu/admin:latest
      
      - name: OCI image vulnerability scanning - Booking
        uses: anchore/scan-action@v3
        id: scan_booking
        with:
          image: ghcr.io/bogdanxu/booking:latest
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      
      - name: Upload vulnerability report - Booking
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan_booking.outputs.sarif }}
      
      - name: OCI image vulnerability scanning - Admin
        uses: anchore/scan-action@v3
        id: scan_admin
        with:
          image: ghcr.io/bogdanxu/admin:latest
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      
      - name: Upload vulnerability report - Admin
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan_admin.outputs.sarif }}
      
      - name: Log into container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Publish container image - Booking
        run: docker push ghcr.io/bogdanxu/booking:latest
      
      - name: Publish container image - Admin
        run: docker push ghcr.io/bogdanxu/admin:latest



